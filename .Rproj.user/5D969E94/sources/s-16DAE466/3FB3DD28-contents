---
title: "Estatistica Aplicada"
author: "Pedro Magalhães (200202298)"
date: '2022-01-03'
output:
  pdf_document: default
  html_notebook: default
subtitle: Projecto intercalar
---

```{r setup, include = FALSE}

knitr::opts_chunk$set(echo = FALSE)

library(reticulate)
reticulate::use_condaenv(condaenv = "venv_mestrado", required= TRUE)

# libraries
library(xts)
library(tidyverse)
library(TTR)
library(quantmod)
library(lubridate)
library(modelr)
library(MASS)
library(readr)
library(gridExtra)

```


```{r data load and transfor, include = FALSE}

# stock data for Microsoft

prices_split_adjusted <- read_csv("data/prices-split-adjusted.csv")
fundamentals <- read_csv("data/fundamentals.csv")

msft_prices <- prices_split_adjusted %>% 
  filter(symbol == "MSFT") %>% 
  left_join( 
    dplyr::select(fundamentals, symbol = `Ticker Symbol`, 
                  eps = `Earnings Per Share`, year = `Period Ending`) %>% 
      filter( year(year) == 2016 ), 
    by = "symbol") %>% 
  mutate(
    date = as.Date(date),
    diff_close_open = ifelse( close - open >= 0, "intraday gain", 
                              "intraday loss"  )
    ) %>% 
  dplyr::select(-symbol, -year)
  

# convert to xts
msft_prices_values_xts <- xts(dplyr::select(msft_prices, -date, -diff_close_open), order.by = msft_prices$date)
msft_prices_charact_xts <- xts(dplyr::select(msft_prices, diff_close_open), order.by = msft_prices$date)
msft_prices_2015_2016_oclh <- msft_prices_values_xts["2015/2016"]
msft_prices_2015_2016_oclh$eps <- NULL


```


```{r calculting main technical rations, include = FALSE }

# add moving average
msft_prices_xts <- msft_prices_values_xts
msft_prices_xts$ema_15 <-  EMA(msft_prices_xts$close, n = 15) 
msft_prices_xts$ema_30 <-  EMA(msft_prices_xts$close, n = 30)
msft_prices_xts$evwma_30 <- EVWMA(msft_prices_xts$close, msft_prices$volume, 30)
msft_prices_xts$rsi <-  RSI(msft_prices_xts$close)
msft_prices_xts$roc <- ROC(msft_prices_xts$close)
msft_prices_xts$momentum <- momentum(msft_prices_xts$close)
msft_prices_xts$per_30 <- msft_prices_xts$ema_30/msft_prices_xts$eps
msft_prices_xts$volatility <- volatility(msft_prices_xts$close, n = 15, calc="close") 

avg_per30 = mean(msft_prices_xts$per_30, na.rm = TRUE)

msft_prices_2015_2016_xts <- msft_prices_xts["2015/2016"]

```


```{r build final dataset, include=FALSE}

msft_prices_2015_2016_df <- 
  data.frame(date =index(msft_prices_2015_2016_xts), coredata(msft_prices_2015_2016_xts)) %>% 
  mutate(
    per_30_mean = ifelse(per_30 > mean(per_30), "Higher than average","Lower than average"),
    diff_close_open = ifelse( close - open >= 0, "intraday gain", "intraday loss" ),
    volatility_cat = case_when(
      volatility <= quantile(volatility,0.25) ~ "Low Volatility",
      volatility <= quantile(volatility,0.5) ~ "Medium Low volatility",
      volatility <= quantile(volatility,0.75) ~ "Medium High volatility",
      TRUE ~ "High"
    )
  ) %>% 
  dplyr::select(-open,-low,-high,-volume, -volatility)

```


> Declaro que o presente relatório é de minha autoria e não foi utilizado previamente noutro curso ou unidade curricular, desta ou de outra instituição. As referências a outros autores (afirmações,ideias, pensamentos) respeitam escrupulosamente as regras da atribuição, e encontram-se devidamente indicadasno texto e nas referências bibliográficas, de acordo com as normas de referenciação. Tenho consciência de que a prática de plágio e auto-plágio constitui um ilícito académico.

# Introdução

## Definição da questão

Investir no mercado de capitais implica tomar de decisões de compra de ativos financeiros num contexto de incerteza. De forma a tomarem decisões de investimento em linha com o seu perfil de risco e estratégias diferentes investidores recorrem a diferentes técnicas para entender e prever a evolução do preço do ativo transacionado e identificar oportunidades de entrada (compra) e saída (venda). 

No caso de ações cotadas, e comum a utilização da análise técnica que consiste em modelar da evolução temporal do preço de uma ação em face da evolução de determinados indicadores técnicos.

Este projeto estuda a relação linear entre a cotação diária das ações da Microsoft no mercado de valores de Nova York e alguns indicadores técnicos normalmente utilizados neste tipo de análises. 

Foram utilizados dados públicos da cotação diária de abertura, de fecho, máxima e mínima entre 01-01-2015 e 31-12-2016 no mercado de Nova York assim como informação das demonstrações financeiras anuais divulgados no site Kaggle.com.


## Critérios de selecção do modelo

O modelo seleccionado é que aquela que apresenta o maior $R^2$ ajustado e menor $AIC$.

## Pressupostos e limitações

Apesar deste projeto estudar a relação linear entre a cotação diária de encerramento e vários indicadores, do ponto de vista da teoria da análise de mercados e da avaliação de carteiras o uso de regressão constitui uma limitação e simplificação. Apesar de válida do ponto de vista académico, na realidade um modelo definido desta forma não permite retirar conclusões adequadas para suportar qualquer conclusão ou decisão.

De entre as limitações e pressupostos assumidos, o mais importante é o pressuposto de **independência entre as observações e consequentemente dos resíduos do modelo**. Dada a natureza dos dados utilizados é de esperar que as observações $y_s$ representando a cotação de fecho do momento S e $y_{s-h}$ representando a observação no momento S-H **não são independentes** estando portante perante uma série temporal.

O estudo dos efeitos autorregressivos contidos na amostra da cotação está fora do âmbito deste projeto pelo que iremos desconsiderar este efeito no modelo e apenas levar em linha de conta sinais externos à série os quais serão dados pelos indicadores técnicos calculados.

# Análise exploratória dos dados

## Descrição da base de dados

```{r echo=FALSE}

summary(msft_prices_2015_2016_df)

```

A base de dados utilizada contém os seguintes dados:

**date:** 

Índice diário entre `r min(msft_prices_2015_2016_df$date)` e `r max(msft_prices_2015_2016_df$date)`

**close:** 

Cotação de fecho da sessão diária ajustado por eventuais splits de ações ocorridos durante o ano. (um split de ações significa aumentar o nº de ações em circulação mantendo o mesmo market cap o que gera uma variação abrupta na cotação no momento da realização e no choque de mercado)

```{r close plot, echo=FALSE}

ts_plot <- autoplot(msft_prices_2015_2016_xts$close) + 
  theme_bw()+
  geom_line(colour = "blue")
  

ts_plot +
  labs(
    title = "Cotação de fecho",
    subtitle = "Microsoft",
    x ="",
    y = "valores em $",
    caption = "Fig 1: evolução da cotação de fecho das acções da Microsoft no mercado de valores de NY em 2015 e 2016") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) +
  scale_y_continuous(labels=function(x) format(x, big.mark = ".", scientific = FALSE)) 
  scale_x_date(limits = as.Date(c(min(index(msft_prices_2015_2016_xts)), max(index(msft_prices_2015_2016_xts)))), date_breaks = "2 months", date_labels = "%Y-%m")


```

```{r close eda}

hist <- ggplot(data = msft_prices_2015_2016_xts, aes( x = close ) ) + 
  geom_histogram(bins = 5, fill = "white", color = "black") +
  theme_bw() +
  labs(
    title = "Histograma Close",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 2: Histograma de cotação de fecho  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 


box_plot <- ggplot(data = msft_prices_2015_2016_xts, aes( y = close ) ) + 
  geom_boxplot() +
  theme_bw() +
  labs(
    title = "Box Plot Close",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 3: Box Plot de cotação de fecho  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 

grid.arrange(hist, box_plot, nrow = 1)

```

Esta é a Variável dependente que o modelo procura explicar. A figura 2 e 3 descrevem gráficamente a distribuição da amostra. A análise gráfica não parece sugerir que existam outliers.

**low:** mínimo diário a que a acção foi transaccionada

**high:** máximo diário a que a acção foi transaccionada

**volume:** volume de transacções diário

**eps:** Earning per Share anual conforme reportado pelas demonstrações financeiras de final do ano e usando o seguinte rácio

$$EPS = \frac{\text{Net Income}}{\text{Outstanding Shares}}$$

Os dados de low, high, volume e eps foram utilzados para cálculo dos rácio técnicos, mas não serão utilizados para efeito do modelo.

**ema_15 e ema_30** 

Exponential Moving Average para a janela de 15 e 30 dias respectivamente.

```{r closing and ema, echo=FALSE}

ggplot(data = msft_prices_2015_2016_xts, aes(x = index(msft_prices_2015_2016_xts), y = close)) + 
  geom_line(colour = "grey", size = 0.3) +
  geom_line(aes(x = index(msft_prices_2015_2016_xts), y = ema_15, color = "ema_15"), size = 1) +
  geom_line(aes(x = index(msft_prices_2015_2016_xts), y = ema_30, color = "ema_30"), size = 1) +
  geom_line(aes(x = index(msft_prices_2015_2016_xts), y = evwma_30, color = "evwma_30"), size = 1) +
  theme_bw() +
  scale_color_manual(name = "", values = c("ema_15" = "blue", "ema_30" = "red", "evwma_30" = "green"))  +
  labs(
    title = "Cotação de fecho",
    subtitle = "Microsoft",
    x ="",
    y = "valores em $",
    caption = "Fig 1: evolução da cotação de fecho das acções da Microsoft no mercado de valores de NY em 2015 e 2016") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) +
  scale_y_continuous(labels=function(x) format(x, big.mark = ".", scientific = FALSE)) 
  scale_x_date(limits = as.Date(c(min(index(msft_prices_2015_2016_xts)), max(index(msft_prices_2015_2016_xts)))), date_breaks = "2 months", date_labels = "%Y-%m") 
  

```

**evwma_30** 

Exponential Moving Average Volume Weigthed. Semelhante ao indicador anterior mas corrigido pelo volume de transacção diário

**rsi:** 

Relative Strengh Index mensura a força do movimento de subida ou descida em face de um intervalo de evolução. Diferenças entre a evolução deste indicador e a cotação podem indiciar uma inversão da tendência


```{r rsi eda}

hist <- ggplot(data = msft_prices_2015_2016_xts, aes( x = rsi ) ) + 
  geom_histogram(bins = 5, fill = "white", color = "black") +
  theme_bw() +
  labs(
    title = "Histograma Rsi",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 4: Histograma de rsi  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 


box_plot <- ggplot(data = msft_prices_2015_2016_xts, aes( y = rsi ) ) + 
  geom_boxplot() +
  theme_bw() +
  labs(
    title = "Box Plot Rsi",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 5: Box Plot de rsi  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 

plot <- ggplot(data = msft_prices_2015_2016_xts, aes( x = rsi, y = close ) ) + 
  geom_point() + 
  geom_smooth(method = lm, se = FALSE) +
  theme_bw() +
  labs(
    title = "",
    subtitle = "",
    x ="",
    y = "",
    caption = "Fig 6: relação com fecho") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 

grid.arrange(hist, box_plot, plot, layout_matrix = rbind(c(1, 2),c(3, 3)))

```

A análise gráfica não indicia a existência de outliers e aparenta existir uma relação linear com a variável dependente.

**roc:** 

Percentagem de diferença entre n observações

```{r roc eda}

hist <- ggplot(data = msft_prices_2015_2016_xts, aes( x = roc ) ) + 
  geom_histogram(bins = 5, fill = "white", color = "black") +
  theme_bw() +
  labs(
    title = "Histograma roc",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 4: Histograma de roc  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 


box_plot <- ggplot(data = msft_prices_2015_2016_xts, aes( y = roc ) ) + 
  geom_boxplot() +
  theme_bw() +
  labs(
    title = "Box Plot roc",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 5: Box Plot de roc  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 

plot <- ggplot(data = msft_prices_2015_2016_xts, aes( x = roc, y = close ) ) + 
  geom_point() + 
  geom_smooth(method = lm, se = FALSE) +
  theme_bw() +
  labs(
    title = "",
    subtitle = "",
    x ="",
    y = "",
    caption = "Fig 6: relação com fecho") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 

grid.arrange(hist, box_plot, plot, layout_matrix = rbind(c(1, 2),c(3, 3)))

```

A análise gráfica aponta para a existência de eventuais outliers que necessitariam de ser analisados mais detalhadamente. Comparada com a variável dependente vericamos que existem pontos que indiciam ter um "leverage" elevado.

**momentum:** 

Diferença entre n observações (lag)

```{r momentum eda}

hist <- ggplot(data = msft_prices_2015_2016_xts, aes( x = momentum ) ) + 
  geom_histogram(bins = 5, fill = "white", color = "black") +
  theme_bw() +
  labs(
    title = "Histograma momentum",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 4: Histograma de momentum  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 


box_plot <- ggplot(data = msft_prices_2015_2016_xts, aes( y = momentum ) ) + 
  geom_boxplot() +
  theme_bw() +
  labs(
    title = "Box Plot momentum",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 5: Box Plot de momentum  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 

plot <- ggplot(data = msft_prices_2015_2016_xts, aes( x = momentum, y = close ) ) + 
  geom_point() + 
  geom_smooth(method = lm, se = FALSE) +
  theme_bw() +
  labs(
    title = "",
    subtitle = "",
    x ="",
    y = "",
    caption = "Fig 6: relação com fecho") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 

grid.arrange(hist, box_plot, plot, layout_matrix = rbind(c(1, 2),c(3, 3)))

```

Conclusões idênticas às dp ROC

**per_30:** 

Price Earning Ratio 30 days trailing

**per_30_mean:** 

Variável categórica que assume valores se per_30 for superior à média dos dois anos então "Higher than average" caso contrário "Lower than average"

**volatility:** 

Variância Close-to-Close para uma janela de 15 dias.

```{r volatility eda}

hist <- ggplot(data = msft_prices_2015_2016_xts, aes( x = volatility ) ) + 
  geom_histogram(bins = 5, fill = "white", color = "black") +
  theme_bw() +
  labs(
    title = "Histograma volatility",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 4: Histograma de volatility  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 


box_plot <- ggplot(data = msft_prices_2015_2016_xts, aes( y = volatility ) ) + 
  geom_boxplot() +
  theme_bw() +
  labs(
    title = "Box Plot volatility",
    subtitle = "Microsoft",
    x ="",
    y = "",
    caption = "Fig 5: Box Plot de volatility  ") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 

plot <- ggplot(data = msft_prices_2015_2016_xts, aes( x = volatility, y = close ) ) + 
  geom_point() + 
  geom_smooth(method = lm, se = FALSE) +
  theme_bw() +
  labs(
    title = "",
    subtitle = "",
    x ="",
    y = "",
    caption = "Fig 6: relação com fecho") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 

grid.arrange(hist, box_plot, plot, layout_matrix = rbind(c(1, 2),c(3, 3)))

```

Parece existir uma relação negativa entre as variáveis indiciando quanto maior a volatilidade menor o preço.

**diff_close_open:** 

Variável categórica para se ocorreu um ganho intradia (Close > Open) ou uma perda (Close < Open)


## Matriz de correlação

```{r correplot}

corrplot::corrplot(cor( dplyr::select(msft_prices_2015_2016_df, -date, -per_30_mean, -diff_close_open, -eps, -volatility_cat), method = "pearson" ), method = "number")

```

A variável dependente em estudo apresenta uma elevada correlação positiva relativamente à média móvel exponencial a 15, 30 e 30 dias ajustado pelo volume assim como com Price Earning Ratio com 30 dias. Esta conclusão não é surpreendente dado a natureza dos indicadores calculados.

As conclusões da matriz form incorporadas no modelo tendo sido apenas considerado a média movel exponencial ajustada pelo volume por se tratar de um indicador sintetico mais completo.

# Modelos e avaliação

```{r, model fit}

models <- list(
  
  # individual models
  ema_15 = "close ~ ema_15",
  ema_30 = "close ~ ema_30",
  evwma_30 = "close ~ evwma_30",
  rsi = "close ~ rsi",
  roc = "close ~ roc",
  momentum = "close ~ momentum",
  per_30 = "close ~ per_30",
  volatility = "close ~ volatility_cat",
  per_30_mean = "close ~ per_30_mean",
  diff_close_open = "close ~ diff_close_open",
  complete = "close ~ ema_15 + ema_30 + evwma_30 + rsi + roc + momentum + per_30 + volatility_cat + per_30_mean + diff_close_open" ,
  adjusted = "close ~ evwma_30 + rsi + momentum + per_30 + volatility_cat + per_30_mean + diff_close_open",
  relation = "close ~ evwma_30*volatility_cat + rsi * volatility_cat + momentum * volatility_cat + per_30 * volatility_cat + per_30_mean + diff_close_open"
  
)

model_testing <- tibble(model = models) %>% 
  mutate(model_name = names(model)) %>% 
  mutate(model = map(model, as.formula)) %>% 
  mutate(
    fit = map(model, ~lm(., data = msft_prices_2015_2016_df), msft_prices_2015_2016_df = msft_prices_2015_2016_df)
  ) %>% 
  mutate(
      r2 = map_dbl( fit, ~modelr::rsquare(., data = msft_prices_2015_2016_df) ),
      aic = map_dbl( fit, ~AIC(.) ),
      summary = map(fit, ~summary(.))
    ) %>% 
  arrange(aic)

```
```{r, model table}

dplyr::select(model_testing, -summary, -fit) %>% mutate(model = as.character(model))

```



```{r}

model_testing[[6]][[1]]

```
```{r}

model <- lm(close ~ evwma_30*volatility_cat + rsi * volatility_cat + per_30 , data = msft_prices_2015_2016_df)

summary(model)

```

```{r}

stepAIC(model, direction='back')

```

Não existindo qualquer fundamento teórico que obrigasse à inclusão de qualquer das variáveis utilizadas, retiramos para o modelo final aquelas cuja a Hipoteses nula não pudesse ser refutada. Modelo obtido através de Backward Selection.

# Estudo dos residuos

```{r residuals}
par(mfrow = c(2,2))

hist(rstandard(model))
plot(model, which=2)
plot(model, which=3)

```
Da análise gráfica não parece existir indicidos de heterostacidade nos resíduos, mas o gráfico de Normal Q-Q apresenta algum desvio que pode impactar o resultado de testes estatísticos.

# Questões sobre Regressão Linear

e.1) Mantendo tudo o resto constante, um aumento de 1 USD na média móvel exponencial ponderado pelo volume a 30 dias representa um aumento de -0.08 USD no valor spot. Mantendo tudo o resto constante, em média volatilidade a 30 dias baixa resultam em mais 5 USD na cotação, Média alta em 4,1 USD e Média Lpw em 3,89 USD face a se tivesse uma Volatilidade Alta.



e.2.)

```{r}

table(msft_prices_2015_2016_df$volatility_cat)

t <- msft_prices_2015_2016_df %>% 
  dplyr::select( close, evwma_30 ) %>% 
  mutate( rsi = mean(msft_prices_2015_2016_df$rsi), 
         per_30 = mean(msft_prices_2015_2016_df$per_30),
         volatility_cat = "Medium High volatility")

conf <- predict(model,t ,int="conf")
pred <- predict(model,t ,int="pred")


# evwma_30 * volatility_cat + rsi * volatility_cat + per_30

t <- t %>% 
  cbind(dplyr::select(as.data.frame(conf), conf_lwr = lwr, conf_upr = upr, fit = fit)) %>% 
  cbind(dplyr::select(as.data.frame(pred), -fit))


ggplot(data = t, aes(x = evwma_30, y = fit)) + 
  geom_line(colour = "grey", size = 1) +
  geom_line(aes(x = evwma_30, y = conf_lwr), size = 0.5, colour = "blue") +
  geom_line(aes(x = evwma_30, y = conf_upr), size = 0.5, colour = "blue") +
  geom_line(aes(x = evwma_30, y = lwr), size = 0.5, colour = "red") +
  geom_line(aes(x = evwma_30, y = upr), size = 0.5, colour = "red") +
  theme_bw() +
  labs(
    title = "Previsões modelo com banda de confiança e previsão",
    subtitle = "Azul banda de confiança, vermelhor banda de estimação",
    x ="Valores de Média Movel exponencial",
    y = "",
    caption = "") +
  theme(
    text =  element_text( size = 8),
    plot.title = element_text(size = 10, lineheight = .9, face = "bold"),
    plot.caption = element_text(hjust = 0.5, face = "italic"),
    plot.caption.position = "plot"
    ) 


```

e3) 



e4)

```{r}

dt <- msft_prices_2015_2016_df %>% 
  mutate(evwma_30 = evwma_30 + sd(msft_prices_2015_2016_df$evwma_30) * 2 )

model <- lm(close ~ evwma_30*volatility_cat + rsi * volatility_cat + per_30 , data = dt)

summary(model)

```

Sem impacto significativo no modelo e nos coefecientes estimados.

e5) Efeito já incluido no modelo estudado



